export function Call()
{
~ [BRACE]
    if (x == 3)
    {
    ~ [BRACE]
       x = 4;
    }
    else {
    ~~~~   [ELSE]
        x = 5;
    }
    return "called";
}

var object =
{
~ [BRACE]
    a: 1,
    b: 2
};

for(var x= 0; x < 1; ++x)
{
~ [BRACE]
    ++i;
}

switch(y)
{
~ [BRACE]
    case 0:
        x--;
        break;
    default:
        x++;
        break;
}

try
{
~ [BRACE]
    throw new Error("hi");
}
catch (e)
~~~~~     [CATCH]
{
~ [BRACE]
    throw(e);
}
finally
~~~~~~~ [FINALLY]
{
~ [BRACE]
    // do something
}

try {
    foo();
}
finally
~~~~~~~ [FINALLY]
{
~ [BRACE]
    bar();
}

try{
   ~ [SPACE]
    foo();
} catch(e){
          ~ [SPACE]
    bar();
} finally{
         ~ [SPACE]
    baz();
}

while(x < 10){
             ~ [SPACE]
    x++;
}

class BarBooBaz
{
~ [BRACE]

}

class FooBarBaz {
}

// Valid multiline declarations
export class LongDescriptiveClassName
    extends SomeAbstractBaseClass {
}

function longFunctionNameWithLotsOfParams(
    x,
    y,
    z,
    a) {
}

let geoConfig
= {
    maximumAge: 3000,
    timeout: 5000,
    enableHighAccuracy: false
};

// No error if there are no braces
if (true)
    true;
else
    false;

[BRACE]: Expected '{' to go on the same line as the preceding token.
[ELSE]: Expected 'else' to go on the same line as the preceding token.
[CATCH]: Expected 'catch' to go on the same line as the preceding token.
[FINALLY]: Expected 'finally' to go on the same line as the preceding token.
[SPACE]: Expected a space.
